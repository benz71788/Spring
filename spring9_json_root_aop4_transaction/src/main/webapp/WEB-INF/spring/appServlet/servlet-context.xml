<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.json.jsonroot" />
	
	<!-- Transaction Manager -->
	<beans:bean id="transactionManager"
				class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />			
	</beans:bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPointcut"
					expression="execution(* com.json.jsonroot..*Impl2.set*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut" />
	</aop:config>
	
	<!-- 
		tx는 스프링 트랜잭션을 담당합니다.
		tx를 사용하기 위해 상단에 네임스페이스를 추가합니다.
		트랜잭션을 적용할 때 사용할 Advice를 생성합니다.
		get으로 시작하는 모든 메서드는 읽기전용으로 설정하고,
		set으로 시작하는 모든 메서드는 RuntimeException이 발생했을 때
		트랜잭션을 통해 롤백을 처리하도록 설정합니다.
		
		*트랜잭션 설정방법
		1. 트랜잭션 관리 기능의 Advice는 직접 구현하지 않고 스프링 컨테이너가
			<tx:advice>설정을 참조하여 자동으로 생성합니다.
			
		2. transaction-manager 속성은 DataSourceTransactionManager의 빈 id를 설정합니다.
			우리는 단지 생성되는 Advice의 아이디를 id속성으로 Advice 객체가 사용할
			트랜잭션 관리자를 transaction-manager 속성으로 지정하면 됩니다.
			
		3. <tx:advice id="txAdvice" transaction-manager="transactionManager">
			==> txAdvice라는 Advice가 transactionManager를 이용하여 트랜잭션을 관리한다는 설정입니다.
		
		4. <tx:attributes>의 자식 <tx:method>엘리먼트를 이용하여 트랜잭션을 적용할 메서드를 지정합니다.
		
		5. <tx:method name="get*" read-only="true" />
			get으로 시작하는 모든 메서드는 read-only="true" 즉, 읽기 전용으로 처리되어
			트랜잭션 관리 대상에서 제외하고 나머지 메서드들은 트랜잭션 관리에 포함합니다.
			속성 name : 트랜잭션이 적용될 메서드 이름 지정
			속성 read-only : 읽기 전용 여부 지정(기본 false)
			속성 no-rollback-for : 트랜잭션을 롤백하지 않을 예외 지정
			속성 rollback-for : 트랜잭션을 롤백할 에외 지정
		
		6. AOP를 통한 트랜잭션 적용
			* spring9_json_root_aop에서 적용한 경우
			<aop:aspect ref="afterlog">
				<aop:after pointcut-ref="getPointcut" method="afterLog"/>
			</aop:aspect>
			
			* 트랜잭션 적용한 경우
			<aop:pointcut id="transactionPointcut"
				expression="execution(* com.json.jsonroot..*Impl2.set*(..))" />
			<aop:advisor advice-ref="txAdvice"
				pointcut-ref="transactionPointcut" />
		
		=> 트랜잭션은 AOP를 적용 할 떄 <aop:aspect>대신 <aop:advisor>를 사용합니다.
			트랜잭션에 적용할 Advice 클래스를 직접 구현하지 않고 스프링 컨테이너가 자동으로 생성하므로
			메서드 이름을 알 수 없습니다.
			그래서 pointcut-ref으로 설정한 메서드가 실행될 때 advice-ref로 등록한 Advice가 동작하도록 합니다.
			
		=> 클라이언트가 com.json.jsonroot로 시작하는 모든 패키지의 Impl로 끝나는 클래스에서
			set으로 시작하는 메서드를 호출하여 실행 중에 문제가 발생하면 txAdvice로 등록한
			Advice를 참조하는 transactionManager의 rollback()메서드를 호출하고 정상으로 실행되면
			commit()메서드를 호출합니다.
	 -->
</beans:beans>
