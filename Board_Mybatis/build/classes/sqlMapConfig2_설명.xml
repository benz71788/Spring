<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- 이 파일은 mybatis 설정 파일의 루트 엘리먼트입니다. -->
<configuration>
	<!-- 
		<properties> 엘리먼트:
			프로퍼티 파일을 로딩하려면 <properties>태그를 사용합니다. 
			1. 자바의 클래스 경로를 사용하는 방법 : resource 속성을 사용합니다.
			2. 파일 시스템 경로를 사용하는 방법 : url 속성을 사용합니다.
	-->
	<properties resource="db.properties" />
	
	<!-- 
 		typeAliases 엘리먼트 : 자바 클래스 이름(패키지 이름 포함)에 대한 별명을
 							설정하는데 SQL맵퍼 파일에서 사용할 별명들 입니다.
 		1. typeAlias태그의 type 속성값은 패키지 이름을 포함한 클래스 이름입니다.
 		2. typeAlias태그의 alias 속성은 type에서 지정한 클래스의 별명입니다.
 		3. Member.xml에서
 			<insert id="insert" parameterType="Member">
 			parameterType="Member"에서 사용되고 있습니다.
 	 -->
	<typeAliases>
		<typeAlias type="model.Member" alias="Member" />
	</typeAliases>
	
	<!-- 
		<environments> 엘리먼트 :
		프레임워크에서 사용할 데이터베이서 정보(트랜젝션 관리자, 데이터 소스)를 설정합니다.
		이 태그응 이용하면 여러 개의 데이터 베이스 접속 정보를 설정할 수 있습니다.
		설정된 정보 중에서 하나를 선택할 때 default속성을 사용합니다.
		
		<environment> 엘리먼트 : 각각의 데이터베이스 접속 정보를 정의합니다.
		id 속성은 <environment>를 구분할 때 사용할 식별자입니다.
		
		<transactionManager> 엘리먼트
		트랜잭션 관리 유형 두 가지 - type에서 설정합니다.
			1. JDBC : 직접 JDBC의 commit, rollback 기능을 사용하여 mybatis
					자체에서 트랜잭션을 관리합니다.
			2. MANAGED : Java EE 애플리케이션 서버(JBoss, WebLogic, WebSphere)
					서블릿 컨테이너(톰캣 서버)에서 트랜잭션을 관리합니다.
		
		<dataSource> 엘리먼트
		mybatis는 JDBC 표준 인터페이스인 javax.sql.DataSource 구현체를 이용하여
		DB컨넥션을 다룹니다.
		사용 가능한 세가지 유형
		1. UNPOOLED : DB 컨넥션을 요청할 때마다 매번 컨넥션 객체를 생성합니다.
					높은 성능을 요구하지 않는 단순한 애플리케이션에 적합니다.
		2. POOLED : 미리 DB 컨넥션 객체를 생성해 두고 요청하면 즉시 반환합니다.
					데이터베이스에 연결하는 과정, 즉 연결을 초기화하고
					사용자를 인증하는 과정이 없기 때문에 속도가 빠릅니다.
		3. JNDI : Java EE 애플리케이션 서버나 서블릿 컨테이너(예: 톰캣 서버)에서
					제공하는 데이터 소스(DataSource)를 사용합니다.
	 -->
	 
	 <!-- 
	 	${driver} : <properties>에서 설정한 파일(db.properties)에서
	 				driver 프로퍼티 값을 가져옵니다.
	 	${url} : <properties>에서 설정한 파일(db.properties)에서
	 			url 프로퍼티 값을 가져옵니다.
	  -->
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${driver}" />
				<property name="url" value="${url}" />
				<property name="username" value="${username}" />
				<property name="password" value="${password}" />
			</dataSource>	
		</environment>
	</environments>
	
	<!-- 
		<mappers> 엘리먼트 : SQL 맵퍼 파일들의 정보를 설정할 때 사용합니다.
		각각의 SQL맵퍼 파일의 정보는 <mapper>태그로 정의합니다.
		SQL 맵퍼 파일의 경로를 설정할 때 두 가지 방법이 있습니다.
		1. 자바의 클래스 경로를 사용하는 방법 : resource 속성을 사용합니다.
		2. 파일 시스테 경로를 사용하는 방법 : url 속성을 사용합니다.
			예) c:/model 폴더에 Member.xml에 있는 경우
				<mapper url="file:///c:/model/Member.xml" />
	 -->
	<mappers>
		<mapper url="file:///D:/workspace/MyBatis2/src/Member.xml" />
	</mappers>
</configuration>